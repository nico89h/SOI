#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>

void forkexample()
{
	int x = 1;
	pid_t p = fork(); //con la funcion fork() se crea el proceso
	if(p<0){
	  perror("fork fail");
	  exit(1);
	}
	else if (p == 0)
		printf("Child has x = %d\n", ++x); //se muestra el pid de el proceso hijo
	else
		printf("Parent has x = %d\n", --x); //se muestra el pid de el proceso padre
}
int main()
{
	forkexample();
	return 0;
}
//informacion obtenida de https://www.geeksforgeeks.org/fork-system-call/
/*
otra opcion es: 
//informacion de https://www.programacion.com.py/escritorio/c/creacion-y-duplicacion-de-procesos-en-c-linux
#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>
 
int main(int argc, char *argv[])
{
    pid_t pid;
 
    if ( (pid=fork()) == 0 )
    { /* hijo */
        printf("Soy el hijo (%d, hijo de %d)\n", getpid(),
        getppid());
    }
    else
    { /* padre */
        printf("Soy el padre (%d, hijo de %d)\n", getpid(),
        getppid());
    }
 
    return 0;
}
*/


